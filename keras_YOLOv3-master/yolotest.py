# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'yolotest.ui'
#
# Created by: PyQt5 UI code generator 5.15.0
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.

import sys
import argparse
from yolo import YOLO, detect_video
from PIL import Image
from PyQt5 import QtCore, QtGui, QtWidgets
import cv2
from PyQt5.QtGui import QPalette, QColor, QImage, QPixmap, QPainter, QPen, QGuiApplication
import os
import numpy as np




class Ui_MainWindow(object):
    def __init__(self, MainWindow):
        self.yolo = YOLO()
        self.setupUi(MainWindow)
        self.retranslateUi(MainWindow)
        #self.cap = cv2.VideoCapture(0)
       # cv2.imwrite(r'C:\Users\a0913\Desktop\82.jpg',self.image)
        self.slot_init()
        self.button_count = 0

        self.cap = cv2.VideoCapture(0)

      #  self.timer = QtCore.QTimer() 
      #  self.timer.timeout.connect(self.start) 
      #  self.timer.start(30) # every 1,000 milliseconds

    ##    self.led_timer = QtCore.QTimer() 
        print ("__start__")


    def setupUi(self, mainWindow):
        mainWindow.setObjectName("mainWindow")
        mainWindow.resize(800, 600)
        self.centralwidget = QtWidgets.QWidget(mainWindow)
        self.centralwidget.setObjectName("centralwidget")
        self.gridLayout = QtWidgets.QGridLayout(self.centralwidget)
        self.gridLayout.setObjectName("gridLayout")
        self.verticalLayout = QtWidgets.QVBoxLayout()
        self.verticalLayout.setObjectName("verticalLayout")
        self.pushButton = QtWidgets.QPushButton(self.centralwidget)
        self.pushButton.setObjectName("pushButton")
        self.verticalLayout.addWidget(self.pushButton)
        self.label = QtWidgets.QLabel(self.centralwidget)
        self.label.setText("")
        self.label.setObjectName("label")
        self.verticalLayout.addWidget(self.label)
        self.gridLayout.addLayout(self.verticalLayout, 0, 0, 1, 1)
        mainWindow.setCentralWidget(self.centralwidget)
        self.menubar = QtWidgets.QMenuBar(mainWindow)
        self.menubar.setGeometry(QtCore.QRect(0, 0, 800, 25))
        self.menubar.setObjectName("menubar")
        mainWindow.setMenuBar(self.menubar)
        self.statusbar = QtWidgets.QStatusBar(mainWindow)
        self.statusbar.setObjectName("statusbar")
        mainWindow.setStatusBar(self.statusbar)
    
        self.retranslateUi(mainWindow)
        QtCore.QMetaObject.connectSlotsByName(mainWindow)

        self.pushButton.clicked.connect(self.start)
        
    def retranslateUi(self, mainWindow):
        _translate = QtCore.QCoreApplication.translate
        mainWindow.setWindowTitle(_translate("MainWindow", "MainWindow"))
        self.pushButton.setText(_translate("MainWindow", "Take a photo"))

    def slot_init(self):
        print ('good')

        # self.button_open_camera_click()
        # self.timer_camera.timeout.connect(self.show_camera)

    def start(self):
        print ('take')
        button_count = 0
        if button_count == 0 :   

            ret,frame = self.cap.read()
            image = Image.fromarray(frame)
            image, out_boxes, out_classes, out_scores = self.yolo.detect_image(image)
            result = np.asarray(image)
            result = cv2.cvtColor(result, cv2.COLOR_BGR2RGB)
            showImage = QtGui.QImage(result.data, result.shape[1], result.shape[0], QtGui.QImage.Format_RGB888)
            self.label.setPixmap(QtGui.QPixmap.fromImage(showImage))
            self.label.setScaledContents(True)

            print("yolo_out_boxes : ", out_boxes)
            print("yolo_out_scores : ", out_scores)
            print("yolo_out_classes : ", out_classes)

            print('Found {} boxes for {}'.format(len(out_boxes), 'img'))


        # cv2.namedWindow("result", cv2.WINDOW_NORMAL)
        # cv2.imshow("result", result)
        # cv2.waitKey(0)

import sys
if __name__ == '__main__':  
    app = QtWidgets.QApplication(sys.argv)
    MainWindow = QtWidgets.QMainWindow()
    ui = Ui_MainWindow(MainWindow)

    ui.setupUi(MainWindow) 
    MainWindow.show()
    sys.exit(app.exec_()) 